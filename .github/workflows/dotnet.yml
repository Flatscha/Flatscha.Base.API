name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore     
      
  Test:
    runs-on: ubuntu-latest
    needs: [ Build ]
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
    - name: Test
      run: dotnet test --configuration Release --no-build --verbosity normal 
      
  Publish:
    runs-on: ubuntu-latest
    needs: [ Build, Test ]
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
    - name: Set Version
      run: |
        MAJOR=1
        MINOR=0
        DAY=$(date +%y%j)
        VERSION="$MAJOR.$MINOR.$DAY.${{ github.run_number }}"
        echo "VERSION=$VERSION" >> $GITHUB_ENV
    - name: Restore dependencies
      run: dotnet restore
    - name: Nuget Pack
      run: dotnet pack --configuration Release /p:Version=${VERSION} --no-build --property:PackageOutputPath=../../
    - name: Nuget Push
      run: |
        dotnet nuget push Flatscha.Base.API.${VERSION}.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }} --skip-duplicate
        dotnet nuget push Flatscha.Base.API.Client.${VERSION}.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }} --skip-duplicate
        dotnet nuget push Flatscha.Base.API.Contracts.${VERSION}.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }} --skip-duplicate
        dotnet nuget push Flatscha.Base.API.Test.${VERSION}.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }} --skip-duplicate
